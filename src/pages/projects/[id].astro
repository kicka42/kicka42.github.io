---
import Layout from '../../layouts/Layout.astro';
import { projects } from '../../projects-data.js';
import { marked } from 'marked';

// This function runs at build time to generate static paths
export async function getStaticPaths() {
  return projects.map((project) => ({
    params: { id: project.id }
  }));
}

const { id } = Astro.params;
const project = projects.find(p => p.id === id);

if (!project) {
  return Astro.redirect('/projects');
}

const parsedDescription = marked.parse(project.fullDescription);
---

<Layout title={project.title}>
  <div class="project-page">
    <!-- Project header -->
    <header class="project-header">
      <div class="project-image-large">
        <img 
          src={project.image} 
          alt={`${project.title} cover image`}
        />
      </div>
      <div class="project-info">
        <div class="project-meta">
          <span class="project-year font-style-heading">{project.year}</span>
        </div>
        <h1 class="project-title">{project.title}</h1>
        <p class="project-summary">{project.description}</p>
        
        <!-- Technologies -->
        {project.technologies && project.technologies.length > 0 && (
          <div class="technologies">
            <h3>Technologies Used</h3>
            <div class="tech-tags">
              {project.technologies.map(tech => (
                <span class="tech-tag">{tech}</span>
              ))}
            </div>
          </div>
        )}

        <!-- Links -->
        <div class="project-links">
          {project.github && (
            <a href={project.github} class="button" target="_blank" rel="noopener noreferrer">
              View Code
            </a>
          )}
          {project.video && (
            <a href={project.video} class="button" target="_blank" rel="noopener noreferrer">
              View Video
            </a>
          )}
          {project.demo && (
            <a href={project.demo} class="button" target="_blank" rel="noopener noreferrer">
              Live Demo
            </a>
          )}
        </div>
      </div>
    </header>

    <!-- Project content -->
    <main class="project-content">
      <section class="project-description">
        <h2>About This Project</h2>
        <div class="description-text" set:html={parsedDescription}>
        </div>
      </section>
    </main>
  </div>
</Layout>

<style>
  .project-page {
    max-width: var(--wrap-wide);
    margin: 0 auto;
  }

  .font-style-heading {
    font-size: 1.5rem;
    font-weight: var(--heading-weight);
  }

  .project-header {
    margin-bottom: 3rem;
    padding-bottom: 3rem;
    border-bottom: 0.5px solid #282726;
  }

  .project-image-large {
    margin-bottom: 3rem;
  }

  .project-image-large img {
    width: 100%;
    object-fit: cover;
    border-radius: var(--image-radius);
  }

  .theme-dark .project-image-large img {
    box-shadow: 0 4px 12px rgba(var(--flexoki-black-rgb), 0.4);
  }

  .project-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .project-meta {
    margin-bottom: 1rem;
  }

  .project-year {
    display: inline-block;
    padding: 0.25rem;
    color: var(--flexoki-600);
    border-radius: var(--border-radius);
    font-size: 1.5rem;
    font-weight: var(--heading-weight);
  }

  .theme-dark .project-year {
    background: var(--flexoki-850);
    color: var(--flexoki-300);
  }

  .project-title {
    font-size: 2.5rem;
    font-weight: var(--heading-weight);
    margin-bottom: 1rem;
    color: var(--color-tx-normal);
    text-decoration: underline;
  }

  .theme-dark .project-title {
    color: var(--color-tx-normal);
  }

  .project-summary {
    line-height: var(--line-height);
    color: var(--flexoki-300);
    margin-bottom: 2rem;
  }

  .theme-dark .project-summary {
    color: var(--flexoki-300);
  }

  .technologies {
    margin-bottom: 2rem;
  }

  .technologies h3 {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--flexoki-700);
  }

  .theme-dark .technologies h3 {
    color: var(--flexoki-200);
  }

  .tech-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: var(--flexoki-50);
    color: var(--flexoki-700);
    border: 1px solid var(--flexoki-200);
    border-radius: var(--border-radius);
    font-size: var(--font-smaller);
  }

  .theme-dark .tech-tag {
    background: var(--flexoki-900);
    color: var(--flexoki-200);
    border-color: var(--flexoki-700);
  }

  .project-links {
    display: flex;
    gap: 1rem;
  }

  .project-content {
    padding-top: 3rem;
  }

  .theme-dark .project-content {
    border-color: var(--flexoki-700);
  }

  .project-description h2 {
    font-size: inherit;
    margin-bottom: 2rem;
    color: var(--flexoki-300);
  }

  .theme-dark .project-description h2 {
    color: var(--flexoki-300);
  }

  .description-text {
    line-height: var(--line-height);
    color: var(--flexoki-600);
  }

  .theme-dark .description-text {
    color: var(--flexoki-300);
  }

  .description-text p {
    color: var(--flexoki-300);
    margin-bottom: 1.5rem;
  }

  .theme-dark .description-text p {
    color: var(--flexoki-300);
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .project-header {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .project-image-large {
      position: static;
    }

    .project-title {
      font-size: 2rem;
    }

    .project-links {
      flex-direction: column;
    }

    .button {
      text-align: center;
    }
  }
</style> 